<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="http://code.jquery.com/jquery-latest.js"></script>
    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
    <script type="text/javascript">
    var map = null;
    var currentcount = 0;
    var lat = 0;
    var lon = 0;
    var offset = new Microsoft.Maps.Point(1, 3);
    var showMessageInterval = null;
    var myDat = @Html.Raw(Json.Encode(ViewData["data"]))

    $(function () {
        getMap();
        addPushpins();
    });

    function getMap()
    {
        map = new Microsoft.Maps.Map(document.getElementById('myMap'), { credentials: 'Atfy0c0Wuy4qHIXFmN2_vgy2u-Zf03r60rtPJ_VSZ815VoD0RI9tPAr69N5HgGgD' });
    }

    function addPushpins() {
        //Get data
        var ll1 = @Html.Raw(ViewData["pinLat"]); var ll2 = @Html.Raw(ViewData["pinLong"]);//eval(document.getElementById("mapdata").value);
            for (var i = 1; i < ll1.length - 1; i++) {

                //Create Pushpins from usgs for the latest 20 earthquakes
                //var pushpinOptions = { text: ll[i][3].toString(), visible: true, textOffset: offset };
                var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(ll1[i], ll2[i]));//, pushpinOptions);
                var pushpindragstart = Microsoft.Maps.Events.addHandler(pushpin, 'click', startDragDetails);
                map.entities.push(pushpin);
                currentcount++;
            }
        }

        //add pushpin click event
        startDragDetails = function (e) {
            lat = e.target.getLocation().latitude;
            lon = e.target.getLocation().longitude;
            $("#webjob").html("<p>Begin to find all larger than 6 degrees earthquakes in the circle with radius 1000 kms and center " + lat + "," + lon + " since year 2000.</p>");
            $("#message").html("");
            $.ajax({
                type: "GET",
                url: "/Home/webjob/",
                data: "latitude=" + lat + "&longitude=" + lon,
                success: function (msg) {
                    $("#webjob").html("<p>Submit a webjob to find 6 degrees earthquakes in the circle with radius 1000 kms and center " + lat + "," + lon + " since year 2000.</p>");
                    var message = $("#message");

                    if (showMessageInterval == null) {
                        message.html("<p>Waiting for the webjob result.</p>");
                        showMessageInterval = setInterval(showMessage, 5000);
                    }
                    else {
                        message.html("<p>We are still waiting for the previous job result, please wait..</p>");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#webjob").html("Something wrong to get the earthquakes nearby.");
                }
            });
        }

        function showMessage() {
            if (lat == 0 || lon == 0) {
                return false;
            }

            $.ajax({
                type: "GET",
                url: "/Home/result/",// + lat + "/" + lon + "?r=" + Math.random(),
                datatype:"text",
                success: function (msg) {
                    if (msg == "") {
                        return false;
                    }
                    
                    $("#message").html("There are " + msg.responseText + " big earthquakes happened near.");
                    
                    clearInterval(showMessageInterval);
                    showMessageInterval = null;
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                }
            });
        }

        //remove pushpin
        function removeResultPushpin() {
            var count = map.entities.getLength();
            for (var i = map.entities.getLength() - 1; i >= currentcount ; i--) {
                var pushpin = map.entities.get(i);
                if (pushpin instanceof Microsoft.Maps.Pushpin) {
                    map.entities.removeAt(i);
                };
            }
        }
    </script>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <!-- <p>IIC2154</p> -->
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>

</html>
